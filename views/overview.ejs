<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link type="text/css" rel="stylesheet" href="/stylesheets/overview.css">
    <link rel="manifest" href="/manifest.json">
    <title>Plant Sightings</title>
    <style>
    </style>
</head>
<body>

<div class="header">
    <!-- Navigation Bar -->
    <div class="navbar">
        <div class="logo"><a href="/">Plant Sightings</a></div>
        <ul>
            <li><a href="/home" class="nav-button">Home</a></li>
            <li><a href="/overview?sort=date" class="nav-button">Overview</a></li>
            <li><a href="#" class="nav-button">Add</a></li>
            <li><a href="https://github.com/captainLegoo/TeamMSc09" class="nav-button"><img
                            style="width: 20px; height: 20px;" src="/images/github_logo.png" alt="GitHub"></a></li>
        </ul>
    </div>

    <!-- Title Section with Customizable Image and Text -->
    <div class="title-section">
        <img src="/images/plant_logo.png" alt="Customizable Image">
        <h1>OverView</h1>
        <p>Your customizable text here</p>
    </div>
</div>

<!-- Filter Section -->
<div class="filter-bar">
    <select class="sort-dropdown" id="sortDropdown">
        <option value="date">Sort by Date</option>
        <option value="name">Sort by Name</option>
        <option value="distance">Sort by Distance</option>
    </select>
</div>


<!-- Content Section -->
<div class="content" style="display: flex; flex-wrap: wrap; justify-content: flex-start;">
    <% plants.forEach((plant, index) => { %>
        <div class="card">
            <img src="<%= plant.photo %>" alt="Placeholder image for plant sighting">
            <p><%= plant.description %></p>
            <p><%= plant.identification.name %></p>
        </div>
        <% if ((index + 1) % 4 === 0) { %>
            <div style="flex-basis: 100%; height: 0;"></div>
        <% } %>
    <% }) %>
</div>

<script>
    document.getElementById('sortDropdown').addEventListener('change', function () {
        var sortValue = this.value;

        if (sortValue === 'distance') {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition, showError);
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        } else {
            window.location.href = `/overview?sort=${sortValue}`;
        }

        function showPosition(position) {
            const latitude = position.coords.latitude;
            const longitude = position.coords.longitude;
            console.log(`Latitude: ${latitude}, Longitude: ${longitude}`);
            window.location.href = `/overview?sort=${sortValue}&lat=${lat}&lng=${lng}`;
        }

        function showError(error) {
            switch (error.code) {
                case error.PERMISSION_DENIED:
                    console.log("User denied the request for Geolocation.");
                    break;
                case error.POSITION_UNAVAILABLE:
                    console.log("Location information is unavailable.");
                    break;
                case error.TIMEOUT:
                    console.log("The request to get user location timed out.");
                    break;
                case error.UNKNOWN_ERROR:
                    console.log("An unknown error occurred.");
                    break;
            }
        }
    });

    document.addEventListener("DOMContentLoaded", () => {
        const sortDropdown = document.getElementById('sortDropdown');
        const urlParams = new URLSearchParams(window.location.search);
        const sortParam = urlParams.get('sort');
        if (sortParam) {
            sortDropdown.value = sortParam;
        }

        sortDropdown.addEventListener('change', (event) => {
            const selectedSort = event.target.value;
            const url = new URL(window.location);
            url.searchParams.set('sort', selectedSort);
            window.location.href = url;
        });
    });

</script>

<script>
    if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
            navigator.serviceWorker.register('/service-worker.js').then(registration => {
                console.log('ServiceWorker registration successful with scope: ', registration.scope);
            }, err => {
                console.log('ServiceWorker registration failed: ', err);
            });
        });
    }
</script>
</body>
</html>